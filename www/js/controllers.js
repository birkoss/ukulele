ukuleleApp.controller('ChordsList', function($scope, $ionicModal, $ionicSideMenuDelegate, ChordsFactory, ChordTypesFactory) {

    $scope.filters = {'chord_type': 'Major'};

    $scope.chords = ChordsFactory.get();
    $scope.chord_types = ChordTypesFactory.get();

    $scope.scales = ['A', 'A#/Bb', 'B', 'C', 'C#/Db', 'D', 'D#/Eb', 'E', 'F', 'F#/Gb', 'G', 'G#/Ab'];

    /* Prepare the chord detail modal */
    $ionicModal.fromTemplateUrl('chord-detail.html', {
        scope: $scope,
        animation: 'slide-in-up'
    }).then(function(modal) {
        $scope.modal_chord_detail = modal;
    });

    /* Show/Hide chord detail in a modal */
    $scope.showChord = function(chord) {
        $scope.current_chord = chord;

        $scope.current_scale = [];
        var scale_modifier = [2, 2, 1, 2, 2, 2, 1];
        $scope.scale_parts = [1, 3, 5];

        $scope.strings = ['G', 'C', 'E', 'A'];
        $scope.notes = {'G':'G', 'C':'C', 'E':'E', 'A':'A'};
        $scope.fingers = [0, 0, 0, 1];

        $scope.chord_paths = {'top': 'm 19.211191,162.37469 0.297144,-124.62532 85.223875,0 85.22387,0 0.29713,124.62532 C 190.54897,286.41428 190.53937,287 188.21017,287 186.01682,287 185.87,286.23092 185.87,274.74177 l 0,-12.25823 -25.10018,0 -25.10018,0 0,12.25823 c 0,11.47992 -0.14825,12.25823 -2.3349,12.25823 -2.18666,0 -2.3349,-0.77831 -2.3349,-12.25823 l 0,-12.25823 -25.6839,0 -25.683918,0 0,12.25823 c 0,11.47992 -0.148243,12.25823 -2.334901,12.25823 -2.186658,0 -2.334901,-0.77831 -2.334901,-12.25823 l 0,-12.25823 -25.683904,0 -25.683905,0 0,12.25823 c 0,11.48915 -0.146822,12.25823 -2.340182,12.25823 -2.329182,0 -2.338785,-0.58572 -2.043038,-124.62531 z m 55.751029,69.75515 0,-24.51646 -25.683904,0 -25.683905,0 0,24.51646 0,24.51645 25.683905,0 25.683904,0 z m 56.03762,0 0,-24.51646 -25.6839,0 -25.683918,0 0,24.51646 0,24.51645 25.683918,0 25.6839,0 z m 54.87016,0 0,-24.51646 -25.10018,0 -25.10018,0 0,24.51646 0,24.51645 25.10018,0 25.10018,0 z m -110.90778,-54.87017 0,-24.51645 -25.683904,0 -25.683905,0 0,24.51645 0,24.51646 25.683905,0 25.683904,0 z m 56.03762,0 0,-24.51645 -25.6839,0 -25.683918,0 0,24.51645 0,24.51646 25.683918,0 25.6839,0 z m 54.87016,0 0,-24.51645 -25.10018,0 -25.10018,0 0,24.51645 0,24.51646 25.10018,0 25.10018,0 z m -110.90778,-54.87015 0,-24.51646 -25.683904,0 -25.683905,0 0,24.51646 0,24.51645 25.683905,0 25.683904,0 z m 56.03762,0 0,-24.51646 -25.6839,0 -25.683918,0 0,24.51646 0,24.51645 25.683918,0 25.6839,0 z m 54.87016,0 0,-24.51646 -25.10018,0 -25.10018,0 0,24.51646 0,24.51645 25.10018,0 25.10018,0 z M 74.96222,67.519348 l 0,-24.516452 -25.683904,0 -25.683905,0 0,24.516452 0,24.516462 25.683905,0 25.683904,0 z m 56.03762,0 0,-24.516452 -25.6839,0 -25.683918,0 0,24.516452 0,24.516462 25.683918,0 25.6839,0 z m 54.87016,0 0,-24.516452 -25.10018,0 -25.10018,0 0,24.516452 0,24.516462 25.10018,0 25.10018,0 z M 19.135275,22.864379 l 0.37306,-2.626763 85.223875,0 85.22387,0 0.37305,2.626763 0.37306,2.626764 -85.96998,0 -85.969995,0 z', 'middle': 'm 19.021245,150.40628 c 0,-134.812948 0.01321,-135.585519 2.317701,-135.585519 2.163193,0 2.317701,0.772571 2.317701,11.588508 l 0,11.588508 25.494717,0 25.494717,0 0,-11.588508 c 0,-10.815937 0.15451,-11.588508 2.317702,-11.588508 2.163192,0 2.317701,0.772571 2.317701,11.588508 l 0,11.588508 25.494726,0 25.49473,0 0,-11.588508 c 0,-10.815937 0.1545,-11.588508 2.31769,-11.588508 2.16319,0 2.31771,0.772571 2.31771,11.588508 l 0,11.588508 24.91529,0 24.91529,0 0,-11.588508 c 0,-10.815937 0.15451,-11.588508 2.3177,-11.588508 2.30449,0 2.3177,0.772571 2.3177,135.585519 0,134.81296 -0.0132,135.58553 -2.3177,135.58553 -2.17055,0 -2.3177,-0.77257 -2.3177,-12.16793 l 0,-12.16793 -24.91529,0 -24.91529,0 0,12.16793 c 0,11.39536 -0.14716,12.16793 -2.31771,12.16793 -2.17055,0 -2.31769,-0.77257 -2.31769,-12.16793 l 0,-12.16793 -25.49473,0 -25.494726,0 0,12.16793 c 0,11.39536 -0.147151,12.16793 -2.317701,12.16793 -2.170551,0 -2.317702,-0.77257 -2.317702,-12.16793 l 0,-12.16793 -25.494717,0 -25.494717,0 0,12.16793 c 0,11.39536 -0.14715,12.16793 -2.317701,12.16793 -2.30449,0 -2.317701,-0.77257 -2.317701,-135.58553 z m 55.624836,81.11955 0,-24.33587 -25.494717,0 -25.494717,0 0,24.33587 0,24.33586 25.494717,0 25.494717,0 z m 55.624859,0 0,-24.33587 -25.49473,0 -25.494726,0 0,24.33587 0,24.33586 25.494726,0 25.49473,0 z m 54.46598,0 0,-24.33587 -24.91529,0 -24.91529,0 0,24.33587 0,24.33586 24.91529,0 24.91529,0 z m -110.090839,-54.46599 0,-24.33586 -25.494717,0 -25.494717,0 0,24.33586 0,24.33587 25.494717,0 25.494717,0 z m 55.624859,0 0,-24.33586 -25.49473,0 -25.494726,0 0,24.33586 0,24.33587 25.494726,0 25.49473,0 z m 54.46598,0 0,-24.33586 -24.91529,0 -24.91529,0 0,24.33586 0,24.33587 24.91529,0 24.91529,0 z m -110.090839,-54.46597 0,-24.33585 -25.494717,0 -25.494717,0 0,24.33585 0,24.33585 25.494717,0 25.494717,0 z m 55.624859,0 0,-24.33585 -25.49473,0 -25.494726,0 0,24.33585 0,24.33585 25.494726,0 25.49473,0 z m 54.46598,0 0,-24.33585 -24.91529,0 -24.91529,0 0,24.33585 0,24.33585 24.91529,0 24.91529,0 z M 74.646081,68.127896 l 0,-24.335866 -25.494717,0 -25.494717,0 0,24.335866 0,24.335864 25.494717,0 25.494717,0 z m 55.624859,0 0,-24.335866 -25.49473,0 -25.494726,0 0,24.335866 0,24.335864 25.494726,0 25.49473,0 z m 54.46598,0 0,-24.335866 -24.91529,0 -24.91529,0 0,24.335866 0,24.335864 24.91529,0 24.91529,0 z'};

        $scope.chord_path = $scope.chord_paths['top'];
        $scope.fret_labels = [1, 2, 3, 4];
        if( $scope.chord_paths[ chord.chords['Major'][0]['Position'] ] != undefined ) {
            $scope.chord_path = $scope.chord_paths[ chord.chords['Major'][0]['Position'] ];
            $scope.fret_labels = [2, 3, 4, 5];
        }

        for (var finger in chord.chords['Major'][0]['Fingers']) {
            var string = finger.substr(0, 1);
            var fret = finger.substr(1, 1);
        }

        var scales = $scope.scales.concat($scope.scales);
        for (var i=0; i<scales.length; i++) {
            // Start with the correct chord
            if (scales[i] == chord.name || scales[i].split('/').indexOf(chord.name) >= 0) {
                $scope.current_scale.push(chord.name);
                for (var j=0; j<scale_modifier.length; j++) {
                    i += scale_modifier[j];
                    var inline_scales = scales[i].split('/');
                    var scale = inline_scales[0];
                    if (inline_scales.length > 1) {
                        // Choose the best name
                        if ($scope.current_scale[$scope.current_scale.length-1].substr(0, 1) == scale.substr(0, 1)) {
                            scale = inline_scales[1];
                        }
                    }
                    $scope.current_scale.push( scale );
                }
                break;
            }
        }

        $scope.modal_chord_detail.show();
    };
    $scope.hideChord = function() {
        $scope.current_chord = null;

        $scope.modal_chord_detail.hide();
    }

    /* Toggle the filters side-menu (from the button) */
    $scope.showChordTypes = function() {
        $ionicSideMenuDelegate.toggleRight();
    };
});
